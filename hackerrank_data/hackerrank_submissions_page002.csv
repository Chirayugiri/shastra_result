submission_id,username,problem_name,language,code,page,url
1390059287,unknown,unknown,unknown,"1
def early(arr, k):
2
    result = []
3
    for i in range(len(arr)-k + 1):
4
        b = arr[i:i+k]
5
        faulty = [x for x in b if x < 0]
6
        result.append(faulty[0] if faulty else 0)
7
    return result
8
9
t = int(input())
10
for _ in range(t):
11
    n, k = map(int, input().split())
12
    arr = list(map(int, input().split()))
13
    print(*early(arr, k))",2,https://www.hackerrank.com/contests/tcet-shastra-coding-contest-13-a/challenges/faulty-sensor-readings/submissions/code/1390059287
1390059439,unknown,unknown,unknown,"1
def early(arr, k):
2
    result = []
3
    for i in range(len(arr)-k + 1):
4
        b = arr[i:i+k]
5
        faulty = [x for x in b if x < 0]
6
        result.append(faulty[0] if faulty else 0)
7
    return result
8
9
t = int(input())
10
for _ in range(t):
11
    n, k = map(int, input().split())
12
    arr = list(map(int, input().split()))
13
    print(*early(arr, k))",2,https://www.hackerrank.com/contests/tcet-shastra-coding-contest-13-a/challenges/faulty-sensor-readings/submissions/code/1390059439
1390059469,unknown,unknown,unknown,"1
2
#include <bits/stdc++.h>
3
4
using namespace std;
5
6
typedef long long ll;
7
8
void solve() {
9
10
    int n, k;
11
12
    cin >> n >> k;
13
14
    vector<ll> arr(n);
15
16
    ll total = 0;
17
18
    19
20
    21
22
    for (int i = 0; i < n; i++) {
23
24
        cin >> arr[i];
25
26
        total += arr[i];
27
28
    }
29
30
    31
32
    vector<ll> benefits(n);
33
34
    for (int j = 0; j < n; j++){
35
36
        benefits[j] = arr[j] - (n - 1 - j);
37
38
    }
39
40
    41
42
    sort(benefits.begin(), benefits.end(), greater<ll>());
43
44
    ll best = total;
45
46
    ll sumb = 0;
47
48
    int m = min(k, n);
49
50
    for (int i = 0; i < m; i++){
51
52
        if (benefits[i] < 0) {
53
54
        }
55
56
        sumb += benefits[i];
57
58
        int skips = i + 1;
59
60
        ll candidate = total - sumb - (skips * (skips - 1LL)) / 2LL;
61
62
        best = min(best, candidate);
63
64
    }
65
66
    cout << best << ""\n"";
67
68
}
69
70
int main() {
71
72
    int t; cin >> t;
73
74
    while (t--) {
75
76
        solve();
77
78
    }
79
80
    return 0;
81
82
}
83",2,https://www.hackerrank.com/contests/tcet-shastra-coding-contest-13-a/challenges/breach-firewall/submissions/code/1390059469
1390058210,unknown,unknown,unknown,"1
import java.io.*;
2
import java.util.*;
3
4
public class Solution {
5
   6
    int min = Integer.MAX_VALUE;
7
8
    public void rec(int cz, int cone, int n, String s, int i, int j,int ct) {
9
        if (i > j) {
10
            return;
11
        }
12
13
        int max = Math.max(cz, cone);
14
        min = Math.min(min, max);
15
16
        if (cz == 0 ) {
17
            return;
18
        }
19
        if(cone==ct){
20
             min = Math.min(min, ct);
21
            return;
22
        }
23
24
        if (s.charAt(i) == '1') {
25
            rec(cz, cone + 1, n, s, i + 1, j,ct);
26
        } else if (s.charAt(i) == '0') {
27
            rec(cz - 1, cone, n, s, i + 1, j,ct);
28
        }
29
30
        if (s.charAt(j) == '1') {
31
            rec(cz, cone + 1, n, s, i, j - 1,ct);
32
        } else if (s.charAt(j) == '0') {
33
            rec(cz - 1, cone, n, s, i, j - 1,ct);
34
        }
35
    }
36
37
    public static void main(String[] args) {
38
        Scanner sc = new Scanner(System.in);
39
        int t = sc.nextInt();
40
41
        while (t-- > 0) {
42
            String s = sc.next(); // Read input string
43
            int cz = 0, cone = 0;
44
            45
            for (char ch : s.toCharArray()) {
46
                if (ch == '0') cz++;
47
                else if (ch == '1') cone++;
48
            }
49
50
            Solution sol = new Solution();
51
            sol.rec(cz, 0, s.length(), s, 0, s.length() - 1,cone);
52
            System.out.println(sol.min);
53
        }
54
        55
        sc.close();
56
    }
57
}",2,https://www.hackerrank.com/contests/tcet-shastra-coding-contest-13-a/challenges/server-pruning/submissions/code/1390058210
1390058501,unknown,unknown,unknown,"1
import java.io.*;
2
import java.util.*;
3
4
public class Solution {
5
   6
    int min = Integer.MAX_VALUE;
7
    Map<String, Integer> memo = new HashMap<>();
8
9
    public void rec(int cz, int cone, int n, String s, int i, int j, int ct) {
10
        if (i > j ) {
11
            return;
12
        }
13
14
        String key = i + "","" + j ;
15
        if (memo.containsKey(key)) return;  // Avoid recomputation
16
       17
18
        min = Math.min(min, Math.max(cz, cone));
19
        memo.put(key, min);
20
        if (cone == ct) {
21
            min = Math.min(min, ct);
22
            return;
23
        }
24
        if(cz==0){
25
            return;
26
        }
27
28
        if (s.charAt(i) == '1') {
29
            rec(cz, cone + 1, n, s, i + 1, j, ct);
30
        } else {
31
            rec(cz - 1, cone, n, s, i + 1, j, ct);
32
        }
33
34
        if (s.charAt(j) == '1') {
35
            rec(cz, cone + 1, n, s, i, j - 1, ct);
36
        } else {
37
            rec(cz - 1, cone, n, s, i, j - 1, ct);
38
        }
39
    }
40
41
    public static void main(String[] args) {
42
        Scanner sc = new Scanner(System.in);
43
        int t = sc.nextInt();
44
45
        while (t-- > 0) {
46
            String s = sc.next();
47
            int cz = 0, cone = 0;
48
            49
            for (char ch : s.toCharArray()) {
50
                if (ch == '0') cz++;
51
                else cone++;
52
            }
53
54
            Solution sol = new Solution();
55
            sol.rec(cz, 0, s.length(), s, 0, s.length() - 1, cone);
56
            System.out.println(sol.min);
57
        }
58
        59
        sc.close();
60
    }
61
}
62",2,https://www.hackerrank.com/contests/tcet-shastra-coding-contest-13-a/challenges/server-pruning/submissions/code/1390058501
1390058774,unknown,unknown,unknown,"1
import java.io.*;
2
import java.util.*;
3
4
public class Solution {
5
   6
    int min = Integer.MAX_VALUE;
7
    Map<String, Integer> memo = new HashMap<>();
8
9
    public void rec(int cz, int cone, int n, String s, int i, int j, int ct) {
10
        if (i > j ) {
11
            return;
12
        }
13
14
        String key = i + "","" + j ;
15
        if (memo.containsKey(key)) return;  
16
       17
18
        min = Math.min(min, Math.max(cz, cone));
19
        memo.put(key, min);
20
        if (cone == ct) {
21
            min = Math.min(min, ct);
22
            memo.put(key, min);
23
            return;
24
        }
25
        if(cz==0){
26
            return;
27
        }
28
29
        if (s.charAt(i) == '1') {
30
            rec(cz, cone + 1, n, s, i + 1, j, ct);
31
        } else {
32
            rec(cz - 1, cone, n, s, i + 1, j, ct);
33
        }
34
35
        if (s.charAt(j) == '1') {
36
            rec(cz, cone + 1, n, s, i, j - 1, ct);
37
        } else {
38
            rec(cz - 1, cone, n, s, i, j - 1, ct);
39
        }
40
    }
41
42
    public static void main(String[] args) {
43
        Scanner sc = new Scanner(System.in);
44
        int t = sc.nextInt();
45
46
        while (t-- > 0) {
47
            String s = sc.next();
48
            int cz = 0, cone = 0;
49
            50
            for (char ch : s.toCharArray()) {
51
                if (ch == '0') cz++;
52
                else cone++;
53
            }
54
55
            Solution sol = new Solution();
56
            sol.rec(cz, 0, s.length(), s, 0, s.length() - 1, cone);
57
            System.out.println(sol.min);
58
        }
59
        60
        sc.close();
61
    }
62
}
63",2,https://www.hackerrank.com/contests/tcet-shastra-coding-contest-13-a/challenges/server-pruning/submissions/code/1390058774
1390057997,unknown,unknown,unknown,"1
def min_effort(n, k, arr):
2
    total = sum(arr)
3
    if k == n:
4
        return 0
5
    return total - min(arr)
6
7
t = int(input())
8
for _ in range(t):
9
    n, k = map(int, input().split())
10
    arr = list(map(int, input().split()))
11
    print(min_effort(n, k, arr))
12
13",2,https://www.hackerrank.com/contests/tcet-shastra-coding-contest-13-a/challenges/breach-firewall/submissions/code/1390057997
1390058040,unknown,unknown,unknown,"1
def min_decommissioning_cost(binary_string):
2
    first_one = binary_string.find('1')
3
    last_one = binary_string.rfind('1')
4
    if first_one == -1:
5
        return 0
6
    substring = binary_string[first_one:last_one + 1]
7
    return max(substring.count('0'), binary_string.count('1') - substring.count('1'))
8
9
t = int(input())
10
for _ in range(t):
11
    binary_string = input().strip()
12
    print(min_decommissioning_cost(binary_string))",2,https://www.hackerrank.com/contests/tcet-shastra-coding-contest-13-a/challenges/server-pruning/submissions/code/1390058040
1390057889,unknown,unknown,unknown,"1
from collections import deque
2
3
def earliest_faulty_readings(arr, k):
4
    result = []
5
    dq = deque()
6
    7
    # Process the first window
8
    for i in range(k):
9
        if arr[i] < 0:
10
            dq.append(i)
11
    12
    # Check the first batch
13
    result.append(arr[dq[0]] if dq else 0)
14
    15
    # Process the remaining windows
16
    for i in range(k, len(arr)):
17
        # Remove elements that are out of this window
18
        while dq and dq[0] <= i - k:
19
            dq.popleft()
20
        21
        # Add the current element if it is negative
22
        if arr[i] < 0:
23
            dq.append(i)
24
        25
        # Append the first negative number in the current window or 0
26
        result.append(arr[dq[0]] if dq else 0)
27
    28
    return result
29
30
# Read input
31
t = int(input())
32
for _ in range(t):
33
    n, k = map(int, input().split())
34
    arr = list(map(int, input().split()))
35
    36
    # Compute and print results
37
    print("" "".join(map(str, earliest_faulty_readings(arr, k))))",2,https://www.hackerrank.com/contests/tcet-shastra-coding-contest-13-a/challenges/faulty-sensor-readings/submissions/code/1390057889
1390057705,unknown,unknown,unknown,"1
import java.util.*;
2
3
public class Main {
4
    public static void main(String[] args) {
5
        Scanner sc = new Scanner(System.in);
6
        int T = sc.nextInt();
7
        while (T-- > 0) {
8
            int n = sc.nextInt();
9
            int k = sc.nextInt();
10
            int[] a = new int[n];
11
            long sum_a = 0;
12
            for (int i = 0; i < n; i++) {
13
                a[i] = sc.nextInt();
14
                sum_a += a[i];
15
            }
16
            List<Long> values = new ArrayList<>();
17
            for (int i = 0; i < n; i++) {
18
                long val = a[i] - (n - i - 1L);
19
                values.add(val);
20
            }
21
            values.sort((x, y) -> Long.compare(y, x));
22
            long[] prefixSum = new long[n + 1];
23
            prefixSum[0] = 0;
24
            for (int i = 1; i <= n; i++) {
25
                prefixSum[i] = prefixSum[i - 1] + values.get(i - 1);
26
            }
27
            int max_m = Math.min(k, n);
28
            long maxTotal = Long.MIN_VALUE;
29
            for (int m = 0; m <= max_m; m++) {
30
                long current = prefixSum[m] + ((long) m * (m - 1)) / 2;
31
                if (current > maxTotal) {
32
                    maxTotal = current;
33
                }
34
            }
35
            long minEffort = sum_a - maxTotal;
36
            System.out.println(minEffort);
37
        }
38
        sc.close();
39
    }
40
}",2,https://www.hackerrank.com/contests/tcet-shastra-coding-contest-13-a/challenges/breach-firewall/submissions/code/1390057705
